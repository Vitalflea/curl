name: Publish to NuGet

on:
  push:
    branches:
      - main  # Trigger the workflow when code is pushed to the main branch
  pull_request:
    branches:
      - main  # Optionally, trigger for PRs to the main branch

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache .NET SDK
        uses: actions/cache@v3
        with:
          path: |
            ~/.dotnet
            ~/.nuget/packages
          key: ${{ runner.os }}-dotnet-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-dotnet-
        
      - name: Set up .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0'  # Set your required .NET version
          
      - name: Authenticate with GitHub Packages
        run: dotnet nuget add source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" --name GitHubPackages --username ${{ github.actor }} --password ${{ secrets.NUGET_TOKEN }}

      - name: Get the highest version of curl-static
        run: |
          # Find all .nupkg files in the root directory
          $nupkgFiles = Get-ChildItem -Path . -Filter "curl-static*.nupkg"
          
          # Extract version numbers and find the highest one
          $highestVersion = $nupkgFiles | 
            ForEach-Object {
              # Extract version from the file name (e.g., curl-static-1.0.0.nupkg)
              if ($_ -match 'curl-static-(\d+\.\d+\.\d+)\.nupkg') {
                [version]$matches[1]
              }
            } | Sort-Object -Descending | Select-Object -First 1

          # Set the highest version as an output variable for later use
          echo "Highest version is $highestVersion"
          echo "VERSION=$highestVersion" >> $GITHUB_ENV

      - name: Publish to GitHub Packages
        run: |
          dotnet nuget push "curl-static-${{ env.VERSION }}.nupkg" --api-key ${{ secrets.NUGET_TOKEN }} --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
